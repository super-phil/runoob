<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--&lt;!&ndash; 配置数据源 使用的是Druid数据源 &ndash;&gt;-->
    <!--<bean name="activitiDataSource" class="com.alibaba.druid.pool.DruidDataSource"-->
          <!--init-method="init" destroy-method="close">-->
        <!--<property name="url" value="${jdbc.url}"/>-->
        <!--<property name="username" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->

        <!--&lt;!&ndash; 初始化连接大小 &ndash;&gt;-->
        <!--<property name="initialSize" value="1"/>-->
        <!--&lt;!&ndash; 连接池最大使用连接数量 &ndash;&gt;-->
        <!--<property name="maxActive" value="20"/>-->

        <!--&lt;!&ndash; 连接池最小空闲 &ndash;&gt;-->
        <!--<property name="minIdle" value="1"/>-->
        <!--&lt;!&ndash; 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。&ndash;&gt;-->
        <!--<property name="maxWait" value="60000"/>-->
        <!--&lt;!&ndash;	是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。&ndash;&gt;-->
        <!--<property name="poolPreparedStatements" value="true"/>-->
        <!--<property name="maxOpenPreparedStatements" value="20"/>-->
        <!--&lt;!&ndash; 用来检测有效sql &ndash;&gt;-->
        <!--<property name="validationQuery" value="${validationQuery}"/>-->
        <!--<property name="testOnBorrow" value="false"/>-->
        <!--<property name="testOnReturn" value="false"/>-->
        <!--<property name="testWhileIdle" value="true"/>-->
        <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="60000"/>-->
        <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
        <!--<property name="minEvictableIdleTimeMillis" value="25200000"/>-->
        <!--&lt;!&ndash; 打开removeAbandoned功能 &ndash;&gt;-->
        <!--<property name="removeAbandoned" value="true"/>-->
        <!--&lt;!&ndash; 1800秒，也就是30分钟 &ndash;&gt;-->
        <!--<property name="removeAbandonedTimeout" value="1800"/>-->
        <!--&lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;-->
        <!--<property name="logAbandoned" value="true"/>-->
        <!--&lt;!&ndash; 监控数据库 属性类型是字符串，通过别名的方式配置扩展插件，-->
            <!--常用的插件有：-->
            <!--监控统计用的filter:stat-->
            <!--日志用的filter:log4j-->
            <!--防御sql注入的filter:wall&ndash;&gt;-->
        <!--<property name="filters" value="stat,log4j,wall"/>-->
        <!--<property name="proxyFilters">-->
            <!--<list>-->
                <!--<ref bean="stat-filter"/>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
    <!-- Activiti处理引擎的配置，交由Spring管理 -->
    <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
        <!-- 配置数据源,和系统使用同一个数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!--<property name="dataSource" ref="activitiDataSource" />-->
        <!--建标表策略-->
        <!--update = true  没有就建表 有直接使用-->
        <!--update = flase 没有就抛异常-->
        <property name="databaseSchemaUpdate" value="true"/>
        <property name="jobExecutorActivate" value="false"/>
        <!-- 统一的事务管理 -->
        <property name="transactionManager" ref="transactionManager"/>
        <!--<property name="activityFontName" value="宋体"/>-->
        <!--<property name="labelFontName" value="宋体"/>-->
    </bean>
    <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
        <property name="processEngineConfiguration" ref="processEngineConfiguration" />
    </bean>
</beans>